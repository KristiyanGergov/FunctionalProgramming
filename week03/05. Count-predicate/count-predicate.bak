#lang racket
(define (accumulate-iter combiner null-value term a next b)
  (define (iter acc a)
    (if (> a b)
        acc
        (iter (combiner (term a) acc)
              (next a))))
  (iter null-value a)
 )


(define (identity x) x)

(define (sum term a next b)
  (accumulate-iter + 0 term a next b)
 )